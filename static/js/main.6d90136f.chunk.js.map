{"version":3,"sources":["components/HeaderForBooks.js","BooksAPI.js","components/BookShelf.js","components/ShelvesforBooks.js","components/list-books.js","components/SearchForBooks.js","components/SearchButton.js","App.js","index.js"],"names":["HeaderForBooks","react_default","a","createElement","className","React","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","maxResults","BookShelf","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchInfo","BooksAPI","resp","setState","changeBookShelvesForBooks","console","log","assertThisInitialized","state","map","b","_this2","Fragment","filter","index","imageURL","undefined","imageLinks","thumbnail","key","style","width","height","backgroundImage","value","onChange","event","target","allBooksForSheveles","changeShelf","disabled","title","authors","ShelvesForBooks","currentlyReading","wantToRead","read","components_BookShelf","List","shelves","changeBookShelves","length","toConsumableArray","s","SearchForBooks","execSearched","currentSearched","updateQuery","handleBackClick","onSearchBackClick","window","location","href","input","focus","throttle","loading","trailing","_this$state","react_router_dom","to","onClick","type","placeholder","ref","node","display","list_books","paddingLeft","paddingRight","error","SearchButtonForBooks","BooksApp","showSearchPage","isLoading","updatedshowSearchPageState","handleSearchBackClick","react_router","exact","path","render","components_HeaderForBooks","ShelvesforBooks","SearchButton","components_SearchForBooks","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d90136f.chunk.js","sourcesContent":["import React from 'react';\nclass HeaderForBooks extends React.Component{\n    render(){\n        return(\n            <div className=\"list-books-title\">\n              <h1>BooksShelves</h1>\n            </div>\n        )\n    }\n}\nexport default HeaderForBooks;","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query, maxResults })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\nimport * as BooksAPI from '../BooksAPI';\n\nclass BookShelf extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      books:[]\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchInfo();\n  };\n  fetchInfo = () => {\n    BooksAPI.getAll().then(resp => \n    \n      this.setState({ books: resp })\n      );\n  };\n  changeBookShelvesForBooks = (book, shelf) => {\n    console.log(\"Hiii\", this);\n    BooksAPI.update(book, shelf);\n    this.setState({\n      books: this.state.books.map(b => {\n        return {\n          ...b,\n          shelf: b.id === book.id ? shelf : b.shelf\n        };\n      })\n    });\n  };\n  \n\n  render() {\n    console.log(\"books inside render\",this.state.books);\n    // const shelfForBooks = this.props.books;\n    // const{shelf}=this.props\n    console.log(\"this props\",this.state.books);\n    // const shelves = {\n    //   currentlyReading: [\"Currently Reading\", \"currentlyReading\"],\n    //   wantToRead: [\"Want to Read\", \"wantToRead\"],\n    //   read: [\"Read\", \"read\"]\n    // };\n    \n    return (\n      <React.Fragment>\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">Currently Reading</h2>\n        <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {\n                this.state.books.filter(book => book.shelf === 'currentlyReading').map((book, index) => {\n                  console.log(\"books\",book)\n              // this.state.books.map(book => {\n                let imageURL\n                \n                if (book.shelf !== undefined) {\n                  imageURL = book.imageLinks\n                    ? book.imageLinks.thumbnail \n                    : \"http://via.placeholder.com/123x98\";\n              }\n                \n               \n              return (\n                // <li key={book.id}>\n                //   <div className=\"book\">\n                //     <div className=\"book-top\">\n                //       <div\n                //         className=\"book-cover\"\n                //         style={{\n                //           width: 128,\n                //           height: 193,\n                //           backgroundImage: `url(${imageURL})`\n                         \n                //         }}\n                //       ></div>\n\n                //       <div className=\"book-shelf-changer\">\n                //         <select\n                //           className=\"id\"\n                //           value={book.shelf}\n                //           // changeShelf={this.changeBookShelvesForBooks}\n                //           onChange={event =>\n                //             this.changeBookShelvesForBooks(book, event.target.value)\n                //           }\n                //           allBooksForSheveles={this.state.books}\n                          \n                //         >\n                //           <option value=\"move\" disabled>\n                //             Move to...\n                //           </option>\n                //           <option value={shelves}>\n                //               {book.shelf?book.shelf:null}\n                //           </option>\n                //           <option value={shelves}>Want to read</option>\n                //           <option value=\"read\">read</option>\n                //           <option value=\"none\">None</option>\n                //         </select>\n                //       </div>\n                //       Ï\n                //     </div>\n                //     <div className=\"book-title\">{book.title}</div>\n                //     <div className=\"book-authors\">{book.authors}</div>\n                    \n                //   </div>\n                // </li> \n                <li key={book.id}>\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${imageURL})`\n                       \n                      }}\n                    ></div>\n\n                    <div className=\"book-shelf-changer\">\n                      <select\n                        className=\"id\"\n                        value={book.shelf}\n                        onChange={event =>\n                          this.changeBookShelvesForBooks(book, event.target.value)\n                        }\n                        allBooksForSheveles={this.state.books}\n                        changeShelf={this.changeBookShelvesForBooks}\n                      >\n                        <option value=\"move\" disabled>\n                          Move to...\n                        </option>\n                        <option value=\"currentlyReading\">\n                            Currently Reading\n                        </option>\n                        <option value=\"wantToRead\">Want to read</option>\n                        <option value=\"read\">read</option>\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                    Ï\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  <div className=\"book-authors\">{book.authors}</div>\n                  \n                </div>\n              </li> \n              )\n            })\n            \n              \n              \n              }\n              \n            </ol>\n            </div>\n            <h2 className=\"bookshelf-title\">Want To Read</h2>\n        <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {\n                this.state.books.filter(book => book.shelf === 'wantToRead').map((book, index) => {\n                  console.log(\"books\",book)\n              // this.state.books.map(book => {\n                let imageURL\n                \n                if (book.shelf !== undefined) {\n                  imageURL = book.imageLinks\n                    ? book.imageLinks.thumbnail \n                    : \"http://via.placeholder.com/123x98\";\n              }\n                \n               \n              return (\n                // <li key={book.id}>\n                //   <div className=\"book\">\n                //     <div className=\"book-top\">\n                //       <div\n                //         className=\"book-cover\"\n                //         style={{\n                //           width: 128,\n                //           height: 193,\n                //           backgroundImage: `url(${imageURL})`\n                         \n                //         }}\n                //       ></div>\n\n                //       <div className=\"book-shelf-changer\">\n                //         <select\n                //           className=\"id\"\n                //           value={book.shelf}\n                        \n                //           onChange={event =>\n                //             this.changeBookShelvesForBooks(book, event.target.value)\n                //           }\n                //           allBooksForSheveles={this.state.books}\n                //         >\n                //           <option value=\"move\" disabled>\n                //             Move to...\n                //           </option>\n                //           <option value=\"currentlyReading\">\n                //           {book.shelf?book.shelf:null}Currently Reading\n                //           </option>\n                //           <option value=\"wantToRead\">Want to read</option>\n                //           <option value=\"read\">read</option>\n                //           <option value=\"none\">None</option>\n                //         </select>\n                //       </div>\n                //       Ï\n                //     </div>\n                //     <div className=\"book-title\">{book.title}</div>\n                //     <div className=\"book-authors\">{book.authors}</div>\n                    \n                //   </div>\n                // </li> \n                <li key={book.id}>\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage: `url(${imageURL})`\n                         \n                        }}\n                      ></div>\n\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          className=\"id\"\n                          value={book.shelf}\n                          onChange={event =>\n                            this.changeBookShelvesForBooks(book, event.target.value)\n                          }\n                          allBooksForSheveles={this.state.books}\n                          changeShelf={this.changeBookShelvesForBooks}\n                        >\n                          <option value=\"move\" disabled>\n                            Move to...\n                          </option>\n                          <option value=\"currentlyReading\">\n                              Currently Reading\n                          </option>\n                          <option value=\"wantToRead\">Want to read</option>\n                          <option value=\"read\">read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                      Ï\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{book.authors}</div>\n                    \n                  </div>\n                </li> \n              )\n            })\n            \n              \n              \n              }\n              \n            </ol>\n            </div>\n\n            <h2 className=\"bookshelf-title\">Read</h2>\n        <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {\n                this.state.books.filter(book => book.shelf === \"read\").map((book, index) => {\n                  console.log(\"books\",book)\n              // this.state.books.map(book => {\n                let imageURL\n                \n                if (book.shelf !== undefined) {\n                  imageURL = book.imageLinks\n                    ? book.imageLinks.thumbnail \n                    : \"http://via.placeholder.com/123x98\";\n              }\n                \n               \n              return (\n                <li key={book.id}>\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage: `url(${imageURL})`\n                         \n                        }}\n                      ></div>\n\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          className=\"id\"\n                          value={book.shelf}\n                          onChange={event =>\n                            this.changeBookShelvesForBooks(book, event.target.value)\n                          }\n                          // allBooksForSheveles={this.state.books}\n                          changeShelf={this.changeBookShelvesForBooks}\n                        >\n                          <option value=\"move\" disabled>\n                            Move to...\n                          </option>\n                          <option value=\"currentlyReading\">\n                              Currently Reading\n                          </option>\n                          <option value=\"wantToRead\">Want to read</option>\n                          <option value=\"read\">read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                      Ï\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{book.authors}</div>\n                    \n                  </div>\n                </li> \n              )\n            })\n            \n              \n              \n              }\n              \n            </ol>\n            </div>\n        \n      </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default BookShelf;\n/* <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {shelfForBooks.map(book => (\n              <li key={book.id}>\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${book.imageLinks.thumbnail}`\n                      }}\n                    ></div>\n\n                    <div className=\"book-shelf-changer\">\n                      <select\n                        value={book.shelf}\n                        onChange={e =>\n                          this.props.changeShelf(book, e.target.value)\n                        }\n                      >\n                        <option value=\"move\" disabled>\n                          Move to...\n                        </option>\n                        <option value=\"currentlyReading\">Currently read</option>\n                        <option value=\"wantToRead\">Want to read</option>\n                        <option value=\"read\">readForBooks</option>\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  <div className=\"book-authors\">{book.authors}</div>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div> */","import React from \"react\";\nimport BookShelf from \"./BookShelf\";\n// import * as BooksAPI from '../BooksAPI';\n\n\nclass ShelvesForBooks extends React.Component {\n  state = {\n    books: [],\n    shelf: \"\"\n  };\n  // changeBookShelvesForBooks = (book, shelf) => {\n  //   console.log(\"Hiii\", this);\n  //   BooksAPI.update(book, shelf);\n  //   this.setState({\n  //     books: this.state.books.map(b => {\n  //       return {\n  //         ...b,\n  //         shelf: b.id === book.id ? shelf : b.shelf\n  //       };\n  //     })\n  //   });\n  // };\n \n  render() {\n    const shelves = {\n      currentlyReading: [\"Currently Reading\", \"currentlyReading\"],\n      wantToRead: [\"Want to Read\", \"wantToRead\"],\n      read: [\"Read\", \"read\"]\n    };\n    \n    \n    console.log(shelves);\n    //  const allBooksForSheveles = this.props.allBooksForShevele;\n    // const currentlyReading = allBooksForSheveles.filter(\n    //   book => book.shelf === \"currentlyReading\"\n    // );\n    // const wantToRead = allBooksForSheveles.filter(\n    //   book => book.shelf === \"wantToRead\"\n    // );\n    // const read = allBooksForSheveles.filter(book => book.shelf === \"read\");\n    //  console.log(\"fff\", allBooksForSheveles);\n\n    return (\n      <div className=\"list-books-content\">\n        <div className=\"list-books-content\">\n          {/* {Object.keys(shelves).map(shelf => ( */}\n            <BookShelf \n             \n              // key={shelf}\n              // shelf={shelf}\n              // books={this.state.books}\n              // onShelfChange={() => {\n              //   this.props.changeShelf(shelf);\n              // }}\n            />\n          {/* ))} */}\n          <div>\n       \n      \n     </div> \n        </div>\n      </div>\n    );\n  }\n}\nexport default ShelvesForBooks;\n\n\n  /* <div>\n       \n          <BookShelf\n            books={currentlyReading}\n            title={\"Currently Reading\"}\n            changeShelf={this.props.changeShelf}\n          />\n          \n          <BookShelf\n            books={wantToRead}\n            title={\"Want To Read\"}\n            changeShelf={this.props.changeShelf}\n          />\n        \n          <BookShelf\n            books={read}\n            title={\"Read\"}\n            changeShelf={this.props.changeShelf}\n          />\n        </div> */\n\n","import React from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass List extends React.Component {\n  state = {\n    books: [],\n    query: \"\",\n    shelves:[]\n  };\n  changeBookShelves = (book, shelf) => {\n    console.log(\"Hiii\", book, shelf);\n    BooksAPI.update(book, shelf);\n    this.setState({\n      books: this.state.books.map(b => {\n        return {\n           ...b,\n          shelf: b.id === book.id ? shelf : b.shelf\n        };\n      }),\n      shelves: this.state.shelves.length ? this.state.shelves.map(b => {\n        return {\n           ...b,\n          shelf: b.id === book.id ? shelf : b.shelf,\n        };\n      }) : [{\n        id: book.id,\n        shelf: shelf\n      }]\n    });\n  };\n\n  render() {\n    // const shelves = {\n    //   currentlyReading: [\"Currently Reading\", \"currentlyReading\"],\n    //   wantToRead: [\"Want to Read\", \"wantToRead\"],\n    //   read: [\"Read\", \"read\"]\n    // };\n\n    let shelves = this.state.shelves\n    console.log(shelves,this.props.shelves)\n    return (\n      <React.Fragment>\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {this.props.books.map(book => {\n                shelves = [...shelves, ...this.props.shelves].filter(s=>{return s.id===book.id})\n                let imageURL\n                if (book !== undefined) {\n                  imageURL = book.imageLinks\n                    ? book.imageLinks.thumbnail \n                    : \"http://via.placeholder.com/123x98\";\n              }return (\n\n                <li key={book.id}>\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage: `url(${imageURL})`\n                         \n                        }}\n                      ></div>\n\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          className=\"id\"\n                          value={shelves.length?shelves[0].shelf:'none'}\n                          \n                          // onBookShelfChange={this.props.onBookShelfChange}\n                          onChange={event =>\n                            this.changeBookShelves(book, event.target.value)\n                          }\n                          \n                          \n                        >\n                          <option value=\"move\" disabled>\n                            Move to...\n                          </option>\n                          <option value=\"currentlyReading\">\n                          currentlyReading\n                          </option>\n                          <option value=\"wantToRead\">Want to read</option>\n                          <option value=\"read\">read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                        {console.log(\"shelf\",this.props.shelves.filter(s=>{return s.id===book.id}))}\n                      </div>\n                      Ï\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{book.authors}</div>\n                    \n                  </div>\n                </li> \n              )})}\n             \n            </ol>\n            </div>\n          </div>\n    </React.Fragment>\n     \n    );\n  }\n}\nexport default List;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport throttle from \"lodash/throttle\";\nimport List from \"./list-books\";\n\nclass SearchForBooks extends React.Component {\n  state = {\n    books: [],\n    query: \"\"\n  };\n\n  execSearched = query => {\n    const search = (this.currentSearched = BooksAPI.search(query).then(\n      books => {\n        if (this.currentSearched === search) this.setState({ books })\n      }\n    ));\n  };\n\n  updateQuery = query => {\n    this.setState(\n      {\n        query\n      },\n      () => this.execSearched(query)\n    );\n  };\n\n  componentDidMount() {\n    this.input.focus();\n    this.execSearched = throttle(this.execSearched, 1000, {\n      loading: false,\n      trailing: true\n    });\n  }\n  // changeBookShelves = (book, shelf) => {\n  //   console.log(\"Hiii\", this);\n  //   BooksAPI.update(book, shelf);\n  //   this.setState({\n  //     books: this.state.books.map(b => {\n  //       return {\n  //         ...b,\n  //         shelf: b.id === book.id ? shelf : b.shelf\n  //       };\n  //     })\n  //   });\n  // };\n  handleBackClick = () => {\n    this.props.onSearchBackClick();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    const { books, query } = this.state;\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" onClick={this.handleBackClick}>\n            <button className=\"close-search\">Close</button>\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={event => this.updateQuery(event.target.value)}\n              ref={node => (this.input = node)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <div style={{ display: \"flex\" }}>\n            <List\n              style={{\n                width: 500,\n                height: 500,\n                paddingLeft: 10,\n                paddingRight: 10\n              }}\n              // BookSearchAPI is giving inconsistent results\n              // Please see\n              \n              books={books ? (books.error === undefined ? books : []) : []}\n              shelves={this.props.books}\n              \n              changeShelf={this.changeBookShelves}\n            />\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SearchForBooks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nclass SearchButtonForBooks extends React.Component {\n  render() {\n    return (\n      <div className=\"open-search\">\n        <Link to=\"/search\">\n          <button>Add a book</button>\n        </Link>\n      </div>\n    );\n  }\n}\nexport default SearchButtonForBooks;\n","import React from \"react\";\nimport \"./App.css\";\nimport HeaderForBooks from \"./components/HeaderForBooks\";\nimport BookShelf from \"./components/ShelvesforBooks\";\nimport SearchForBooks from \"./components/SearchForBooks\";\n\nimport SearchButton from \"./components/SearchButton\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: [],\n    isLoading: false\n  };\n  updatedshowSearchPageState = state => {\n    this.setState({ showSearchPage: state });\n  };\n  componentDidMount = () => {\n    this.fetchInfo();\n  };\n  fetchInfo = () => {\n    BooksAPI.getAll().then(resp => this.setState({ books: resp }));\n  };\n  changeBookShelvesForBooks = (book, shelf) => {\n    console.log(\"Hiii\", this);\n    BooksAPI.update(book, shelf)\n    this.setState({\n      books: this.state.books.map(b => {\n        return {\n          ...b,\n          shelf: b.id === book.id ? shelf : b.shelf\n        };\n      })\n    });\n  };\n  handleSearchBackClick = () => {\n    this.fetchInfo();\n  };\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              isLoading ? (\n                <p className=\"loading-message\">loading</p>\n              ) : (\n                <div className=\"list-books\">\n                  <HeaderForBooks />\n                  <BookShelf\n                    allBooksForSheveles={this.state.books}\n                    changeShelf={this.changeBookShelvesForBooks}\n                    \n                  />\n                  <SearchButton />\n                </div>\n              )\n            }\n          />\n          <Route\n            path=\"/search\"\n            render={() => (\n              <SearchForBooks onSearchBackClick={this.handleSearchBackClick} books={this.state.books}/>\n            )}\n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}